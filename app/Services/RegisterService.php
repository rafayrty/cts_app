<?php

namespace App\Services;

use App\Actions\SendPhoneVerification;
use App\Actions\SendWelcomeEmail;
use App\Mail\EmailVerification;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Storage;

class RegisterService
{
    public static $countries_phone_list = [
        '93' => 'Afghanistan (+93)',
        '358' => 'Aland Islands (+358)',
        '355' => 'Albania (+355)',
        '213' => 'Algeria (+213)',
        '1684' => 'American Samoa (+1684)',
        '376' => 'Andorra (+376)',
        '244' => 'Angola (+244)',
        '1264' => 'Anguilla (+1264)',
        '672' => 'Antarctica (+672)',
        '1268' => 'Antigua and Barbuda (+1268)',
        '54' => 'Argentina (+54)',
        '374' => 'Armenia (+374)',
        '297' => 'Aruba (+297)',
        '61' => 'Australia (+61)',
        '43' => 'Austria (+43)',
        '994' => 'Azerbaijan (+994)',
        '1242' => 'Bahamas (+1242)',
        '973' => 'Bahrain (+973)',
        '880' => 'Bangladesh (+880)',
        '1246' => 'Barbados (+1246)',
        '375' => 'Belarus (+375)',
        '32' => 'Belgium (+32)',
        '501' => 'Belize (+501)',
        '229' => 'Benin (+229)',
        '1441' => 'Bermuda (+1441)',
        '975' => 'Bhutan (+975)',
        '591' => 'Bolivia (+591)',
        '599' => 'Bonaire, Sint Eustatius and Saba (+599)',
        '387' => 'Bosnia and Herzegovina (+387)',
        '267' => 'Botswana (+267)',
        '55' => 'Bouvet Island (+55)',
        '55' => 'Brazil (+55)',
        '246' => 'British Indian Ocean Territory (+246)',
        '673' => 'Brunei Darussalam (+673)',
        '359' => 'Bulgaria (+359)',
        '226' => 'Burkina Faso (+226)',
        '257' => 'Burundi (+257)',
        '855' => 'Cambodia (+855)',
        '237' => 'Cameroon (+237)',
        '1' => 'Canada (+1)',
        '238' => 'Cape Verde (+238)',
        '1345' => 'Cayman Islands (+1345)',
        '236' => 'Central African Republic (+236)',
        '235' => 'Chad (+235)',
        '56' => 'Chile (+56)',
        '86' => 'China (+86)',
        '61' => 'Christmas Island (+61)',
        '672' => 'Cocos (+672)',
        '57' => 'Colombia (+57)',
        '269' => 'Comoros (+269)',
        '242' => 'Congo (+242)',
        '242' => 'Congo, Democratic Republic of the Congo (+242)',
        '682' => 'Cook Islands (+682)',
        '506' => 'Costa Rica (+506)',
        '225' => "Cote D'Ivoire (+225)",
        '385' => 'Croatia (+385)',
        '53' => 'Cuba (+53)',
        '599' => 'Curacao (+599)',
        '357' => 'Cyprus (+357)',
        '420' => 'Czech Republic (+420)',
        '45' => 'Denmark (+45)',
        '253' => 'Djibouti (+253)',
        '1767' => 'Dominica (+1767)',
        '1809' => 'Dominican Republic (+1809)',
        '593' => 'Ecuador (+593)',
        '20' => 'Egypt (+20)',
        '503' => 'El Salvador (+503)',
        '240' => 'Equatorial Guinea (+240)',
        '291' => 'Eritrea (+291)',
        '372' => 'Estonia (+372)',
        '251' => 'Ethiopia (+251)',
        '500' => 'Falkland Islands (Malvinas) (+500)',
        '298' => 'Faroe Islands (+298)',
        '679' => 'Fiji (+679)',
        '358' => 'Finland (+358)',
        '33' => 'France (+33)',
        '594' => 'French Guiana (+594)',
        '689' => 'French Polynesia (+689)',
        '262' => 'French Southern Territories (+262)',
        '241' => 'Gabon (+241)',
        '220' => 'Gambia (+220)',
        '995' => 'Georgia (+995)',
        '49' => 'Germany (+49)',
        '233' => 'Ghana (+233)',
        '350' => 'Gibraltar (+350)',
        '30' => 'Greece (+30)',
        '299' => 'Greenland (+299)',
        '1473' => 'Grenada (+1473)',
        '590' => 'Guadeloupe (+590)',
        '1671' => 'Guam (+1671)',
        '502' => 'Guatemala (+502)',
        '44' => 'Guernsey (+44)',
        '224' => 'Guinea (+224)',
        '245' => 'Guinea-Bissau (+245)',
        '592' => 'Guyana (+592)',
        '509' => 'Haiti (+509)',
        '0' => 'Heard Island and Mcdonald Islands (+0)',
        '39' => 'Holy See (Vatican City State) (+39)',
        '504' => 'Honduras (+504)',
        '852' => 'Hong Kong (+852)',
        '36' => 'Hungary (+36)',
        '354' => 'Iceland (+354)',
        '91' => 'India (+91)',
        '62' => 'Indonesia (+62)',
        '98' => 'Iran, Islamic Republic of (+98)',
        '964' => 'Iraq (+964)',
        '353' => 'Ireland (+353)',
        '44' => 'Isle of Man (+44)',
        '972' => 'Israel (+972)',
        '39' => 'Italy (+39)',
        '1876' => 'Jamaica (+1876)',
        '81' => 'Japan (+81)',
        '44' => 'Jersey (+44)',
        '962' => 'Jordan (+962)',
        '7' => 'Kazakhstan (+7)',
        '254' => 'Kenya (+254)',
        '686' => 'Kiribati (+686)',
        '850' => "Korea, Democratic People's Republic of (+850)",
        '82' => 'Korea, Republic of (+82)',
        '381' => 'Kosovo (+381)',
        '965' => 'Kuwait (+965)',
        '996' => 'Kyrgyzstan (+996)',
        '856' => "Lao People's Democratic Republic (+856)",
        '371' => 'Latvia (+371)',
        '961' => 'Lebanon (+961)',
        '266' => 'Lesotho (+266)',
        '231' => 'Liberia (+231)',
        '218' => 'Libyan Arab Jamahiriya (+218)',
        '423' => 'Liechtenstein (+423)',
        '370' => 'Lithuania (+370)',
        '352' => 'Luxembourg (+352)',
        '853' => 'Macao (+853)',
        '389' => 'Macedonia, the Former Yugoslav Republic of (+389)',
        '261' => 'Madagascar (+261)',
        '265' => 'Malawi (+265)',
        '60' => 'Malaysia (+60)',
        '960' => 'Maldives (+960)',
        '223' => 'Mali (+223)',
        '356' => 'Malta (+356)',
        '692' => 'Marshall Islands (+692)',
        '596' => 'Martinique (+596)',
        '222' => 'Mauritania (+222)',
        '230' => 'Mauritius (+230)',
        '262' => 'Mayotte (+262)',
        '52' => 'Mexico (+52)',
        '691' => 'Micronesia, Federated States of (+691)',
        '373' => 'Moldova, Republic of (+373)',
        '377' => 'Monaco (+377)',
        '976' => 'Mongolia (+976)',
        '382' => 'Montenegro (+382)',
        '1664' => 'Montserrat (+1664)',
        '212' => 'Morocco (+212)',
        '258' => 'Mozambique (+258)',
        '95' => 'Myanmar (+95)',
        '264' => 'Namibia (+264)',
        '674' => 'Nauru (+674)',
        '977' => 'Nepal (+977)',
        '31' => 'Netherlands (+31)',
        '599' => 'Netherlands Antilles (+599)',
        '687' => 'New Caledonia (+687)',
        '64' => 'New Zealand (+64)',
        '505' => 'Nicaragua (+505)',
        '227' => 'Niger (+227)',
        '234' => 'Nigeria (+234)',
        '683' => 'Niue (+683)',
        '672' => 'Norfolk Island (+672)',
        '1670' => 'Northern Mariana Islands (+1670)',
        '47' => 'Norway (+47)',
        '968' => 'Oman (+968)',
        '92' => 'Pakistan (+92)',
        '680' => 'Palau (+680)',
        '970' => 'Palestinian Territory, Occupied (+970)',
        '507' => 'Panama (+507)',
        '675' => 'Papua New Guinea (+675)',
        '595' => 'Paraguay (+595)',
        '51' => 'Peru (+51)',
        '63' => 'Philippines (+63)',
        '64' => 'Pitcairn (+64)',
        '48' => 'Poland (+48)',
        '351' => 'Portugal (+351)',
        '1787' => 'Puerto Rico (+1787)',
        '974' => 'Qatar (+974)',
        '262' => 'Reunion (+262)',
        '40' => 'Romania (+40)',
        '70' => 'Russian Federation (+70)',
        '250' => 'Rwanda (+250)',
        '590' => 'Saint Barthelemy (+590)',
        '290' => 'Saint Helena (+290)',
        '1869' => 'Saint Kitts and Nevis (+1869)',
        '1758' => 'Saint Lucia (+1758)',
        '590' => 'Saint Martin (+590)',
        '508' => 'Saint Pierre and Miquelon (+508)',
        '1784' => 'Saint Vincent and the Grenadines (+1784)',
        '684' => 'Samoa (+684)',
        '378' => 'San Marino (+378)',
        '239' => 'Sao Tome and Principe (+239)',
        '966' => 'Saudi Arabia (+966)',
        '221' => 'Senegal (+221)',
        '381' => 'Serbia (+381)',
        '381' => 'Serbia and Montenegro (+381)',
        '248' => 'Seychelles (+248)',
        '232' => 'Sierra Leone (+232)',
        '65' => 'Singapore (+65)',
        '1' => 'Sint Maarten (+1)',
        '421' => 'Slovakia (+421)',
        '386' => 'Slovenia (+386)',
        '677' => 'Solomon Islands (+677)',
        '252' => 'Somalia (+252)',
        '27' => 'South Africa (+27)',
        '500' => 'South Georgia and the South Sandwich Islands (+500)',
        '211' => 'South Sudan (+211)',
        '34' => 'Spain (+34)',
        '94' => 'Sri Lanka (+94)',
        '249' => 'Sudan (+249)',
        '597' => 'Suriname (+597)',
        '47' => 'Svalbard and Jan Mayen (+47)',
        '268' => 'Swaziland (+268)',
        '46' => 'Sweden (+46)',
        '41' => 'Switzerland (+41)',
        '963' => 'Syrian Arab Republic (+963)',
        '886' => 'Taiwan, Province of China (+886)',
        '992' => 'Tajikistan (+992)',
        '255' => 'Tanzania, United Republic of (+255)',
        '66' => 'Thailand (+66)',
        '670' => 'Timor-Leste (+670)',
        '228' => 'Togo (+228)',
        '690' => 'Tokelau (+690)',
        '676' => 'Tonga (+676)',
        '1868' => 'Trinidad and Tobago (+1868)',
        '216' => 'Tunisia (+216)',
        '90' => 'Turkey (+90)',
        '7370' => 'Turkmenistan (+7370)',
        '1649' => 'Turks and Caicos Islands (+1649)',
        '688' => 'Tuvalu (+688)',
        '256' => 'Uganda (+256)',
        '380' => 'Ukraine (+380)',
        '971' => 'United Arab Emirates (+971)',
        '44' => 'United Kingdom (+44)',
        '1' => 'United States (+1)',
        '1' => 'United States Minor Outlying Islands (+1)',
        '598' => 'Uruguay (+598)',
        '998' => 'Uzbekistan (+998)',
        '678' => 'Vanuatu (+678)',
        '58' => 'Venezuela (+58)',
        '84' => 'Viet Nam (+84)',
        '1284' => 'Virgin Islands, British (+1284)',
        '1340' => 'Virgin Islands, U.s. (+1340)',
        '681' => 'Wallis and Futuna (+681)',
        '212' => 'Western Sahara (+212)',
        '967' => 'Yemen (+967)',
        '260' => 'Zambia (+260)',
        '263' => 'Zimbabwe (+263)',
    ];

    public static $countries_static_list = [
        'AF' => 'Afghanistan',
        'AX' => 'Aland Islands',
        'AL' => 'Albania',
        'DZ' => 'Algeria',
        'AS' => 'American Samoa',
        'AD' => 'Andorra',
        'AO' => 'Angola',
        'AI' => 'Anguilla',
        'AQ' => 'Antarctica',
        'AG' => 'Antigua and Barbuda',
        'AR' => 'Argentina',
        'AM' => 'Armenia',
        'AW' => 'Aruba',
        'AU' => 'Australia',
        'AT' => 'Austria',
        'AZ' => 'Azerbaijan',
        'BS' => 'Bahamas',
        'BH' => 'Bahrain',
        'BD' => 'Bangladesh',
        'BB' => 'Barbados',
        'BY' => 'Belarus',
        'BE' => 'Belgium',
        'BZ' => 'Belize',
        'BJ' => 'Benin',
        'BM' => 'Bermuda',
        'BT' => 'Bhutan',
        'BO' => 'Bolivia',
        'BQ' => 'Bonaire, Sint Eustatius and Saba',
        'BA' => 'Bosnia and Herzegovina',
        'BW' => 'Botswana',
        'BV' => 'Bouvet Island',
        'BR' => 'Brazil',
        'IO' => 'British Indian Ocean Territory',
        'BN' => 'Brunei Darussalam',
        'BG' => 'Bulgaria',
        'BF' => 'Burkina Faso',
        'BI' => 'Burundi',
        'KH' => 'Cambodia',
        'CM' => 'Cameroon',
        'CA' => 'Canada',
        'CV' => 'Cape Verde',
        'KY' => 'Cayman Islands',
        'CF' => 'Central African Republic',
        'TD' => 'Chad',
        'CL' => 'Chile',
        'CN' => 'China',
        'CX' => 'Christmas Island',
        'CC' => 'Cocos (Keeling) Islands',
        'CO' => 'Colombia',
        'KM' => 'Comoros',
        'CG' => 'Congo',
        'CD' => 'Congo, the Democratic Republic of the',
        'CK' => 'Cook Islands',
        'CR' => 'Costa Rica',
        'CI' => "Cote D'Ivoire",
        'HR' => 'Croatia',
        'CU' => 'Cuba',
        'CW' => 'Curacao',
        'CY' => 'Cyprus',
        'CZ' => 'Czech Republic',
        'DK' => 'Denmark',
        'DJ' => 'Djibouti',
        'DM' => 'Dominica',
        'DO' => 'Dominican Republic',
        'EC' => 'Ecuador',
        'EG' => 'Egypt',
        'SV' => 'El Salvador',
        'GQ' => 'Equatorial Guinea',
        'ER' => 'Eritrea',
        'EE' => 'Estonia',
        'ET' => 'Ethiopia',
        'FK' => 'Falkland Islands (Malvinas)',
        'FO' => 'Faroe Islands',
        'FJ' => 'Fiji',
        'FI' => 'Finland',
        'FR' => 'France',
        'GF' => 'French Guiana',
        'PF' => 'French Polynesia',
        'TF' => 'French Southern Territories',
        'GA' => 'Gabon',
        'GM' => 'Gambia',
        'GE' => 'Georgia',
        'DE' => 'Germany',
        'GH' => 'Ghana',
        'GI' => 'Gibraltar',
        'GR' => 'Greece',
        'GL' => 'Greenland',
        'GD' => 'Grenada',
        'GP' => 'Guadeloupe',
        'GU' => 'Guam',
        'GT' => 'Guatemala',
        'GG' => 'Guernsey',
        'GN' => 'Guinea',
        'GW' => 'Guinea-Bissau',
        'GY' => 'Guyana',
        'HT' => 'Haiti',
        'HM' => 'Heard Island and Mcdonald Islands',
        'VA' => 'Holy See (Vatican City State)',
        'HN' => 'Honduras',
        'HK' => 'Hong Kong',
        'HU' => 'Hungary',
        'IS' => 'Iceland',
        'IN' => 'India',
        'ID' => 'Indonesia',
        'IR' => 'Iran, Islamic Republic of',
        'IQ' => 'Iraq',
        'IE' => 'Ireland',
        'IM' => 'Isle of Man',
        'IL' => 'Israel',
        'IT' => 'Italy',
        'JM' => 'Jamaica',
        'JP' => 'Japan',
        'JE' => 'Jersey',
        'JO' => 'Jordan',
        'KZ' => 'Kazakhstan',
        'KE' => 'Kenya',
        'KI' => 'Kiribati',
        'KP' => "Korea, Democratic People's Republic of",
        'KR' => 'Korea, Republic of',
        'XK' => 'Kosovo',
        'KW' => 'Kuwait',
        'KG' => 'Kyrgyzstan',
        'LA' => "Lao People's Democratic Republic",
        'LV' => 'Latvia',
        'LB' => 'Lebanon',
        'LS' => 'Lesotho',
        'LR' => 'Liberia',
        'LY' => 'Libyan Arab Jamahiriya',
        'LI' => 'Liechtenstein',
        'LT' => 'Lithuania',
        'LU' => 'Luxembourg',
        'MO' => 'Macao',
        'MK' => 'Macedonia, the Former Yugoslav Republic of',
        'MG' => 'Madagascar',
        'MW' => 'Malawi',
        'MY' => 'Malaysia',
        'MV' => 'Maldives',
        'ML' => 'Mali',
        'MT' => 'Malta',
        'MH' => 'Marshall Islands',
        'MQ' => 'Martinique',
        'MR' => 'Mauritania',
        'MU' => 'Mauritius',
        'YT' => 'Mayotte',
        'MX' => 'Mexico',
        'FM' => 'Micronesia, Federated States of',
        'MD' => 'Moldova, Republic of',
        'MC' => 'Monaco',
        'MN' => 'Mongolia',
        'ME' => 'Montenegro',
        'MS' => 'Montserrat',
        'MA' => 'Morocco',
        'MZ' => 'Mozambique',
        'MM' => 'Myanmar',
        'NA' => 'Namibia',
        'NR' => 'Nauru',
        'NP' => 'Nepal',
        'NL' => 'Netherlands',
        'AN' => 'Netherlands Antilles',
        'NC' => 'New Caledonia',
        'NZ' => 'New Zealand',
        'NI' => 'Nicaragua',
        'NE' => 'Niger',
        'NG' => 'Nigeria',
        'NU' => 'Niue',
        'NF' => 'Norfolk Island',
        'MP' => 'Northern Mariana Islands',
        'NO' => 'Norway',
        'OM' => 'Oman',
        'PK' => 'Pakistan',
        'PW' => 'Palau',
        'PS' => 'Palestinian Territory, Occupied',
        'PA' => 'Panama',
        'PG' => 'Papua New Guinea',
        'PY' => 'Paraguay',
        'PE' => 'Peru',
        'PH' => 'Philippines',
        'PN' => 'Pitcairn',
        'PL' => 'Poland',
        'PT' => 'Portugal',
        'PR' => 'Puerto Rico',
        'QA' => 'Qatar',
        'RE' => 'Reunion',
        'RO' => 'Romania',
        'RU' => 'Russian Federation',
        'RW' => 'Rwanda',
        'BL' => 'Saint Barthelemy',
        'SH' => 'Saint Helena',
        'KN' => 'Saint Kitts and Nevis',
        'LC' => 'Saint Lucia',
        'MF' => 'Saint Martin',
        'PM' => 'Saint Pierre and Miquelon',
        'VC' => 'Saint Vincent and the Grenadines',
        'WS' => 'Samoa',
        'SM' => 'San Marino',
        'ST' => 'Sao Tome and Principe',
        'SA' => 'Saudi Arabia',
        'SN' => 'Senegal',
        'RS' => 'Serbia',
        'CS' => 'Serbia and Montenegro',
        'SC' => 'Seychelles',
        'SL' => 'Sierra Leone',
        'SG' => 'Singapore',
        'SX' => 'Sint Maarten',
        'SK' => 'Slovakia',
        'SI' => 'Slovenia',
        'SB' => 'Solomon Islands',
        'SO' => 'Somalia',
        'ZA' => 'South Africa',
        'GS' => 'South Georgia and the South Sandwich Islands',
        'SS' => 'South Sudan',
        'ES' => 'Spain',
        'LK' => 'Sri Lanka',
        'SD' => 'Sudan',
        'SR' => 'Suriname',
        'SJ' => 'Svalbard and Jan Mayen',
        'SZ' => 'Swaziland',
        'SE' => 'Sweden',
        'CH' => 'Switzerland',
        'SY' => 'Syrian Arab Republic',
        'TW' => 'Taiwan, Province of China',
        'TJ' => 'Tajikistan',
        'TZ' => 'Tanzania, United Republic of',
        'TH' => 'Thailand',
        'TL' => 'Timor-Leste',
        'TG' => 'Togo',
        'TK' => 'Tokelau',
        'TO' => 'Tonga',
        'TT' => 'Trinidad and Tobago',
        'TN' => 'Tunisia',
        'TR' => 'Turkey',
        'TM' => 'Turkmenistan',
        'TC' => 'Turks and Caicos Islands',
        'TV' => 'Tuvalu',
        'UG' => 'Uganda',
        'UA' => 'Ukraine',
        'AE' => 'United Arab Emirates',
        'GB' => 'United Kingdom',
        'US' => 'United States',
        'UM' => 'United States Minor Outlying Islands',
        'UY' => 'Uruguay',
        'UZ' => 'Uzbekistan',
        'VU' => 'Vanuatu',
        'VE' => 'Venezuela',
        'VN' => 'Viet Nam',
        'VG' => 'Virgin Islands, British',
        'VI' => 'Virgin Islands, U.s.',
        'WF' => 'Wallis and Futuna',
        'EH' => 'Western Sahara',
        'YE' => 'Yemen',
        'ZM' => 'Zambia',
        'ZW' => 'Zimbabwe',
    ];

    public $countries_list = [
        93 => 'AF',
        358 => 'AX',
        355 => 'AL',
        213 => 'DZ',
        1684 => 'AS',
        376 => 'AD',
        244 => 'AO',
        1264 => 'AI',
        672 => 'AQ',
        1268 => 'AG',
        54 => 'AR',
        374 => 'AM',
        297 => 'AW',
        61 => 'AU',
        43 => 'AT',
        994 => 'AZ',
        1242 => 'BS',
        973 => 'BH',
        880 => 'BD',
        1246 => 'BB',
        375 => 'BY',
        32 => 'BE',
        501 => 'BZ',
        229 => 'BJ',
        1441 => 'BM',
        975 => 'BT',
        591 => 'BO',
        599 => 'BQ',
        387 => 'BA',
        267 => 'BW',
        55 => 'BV',
        55 => 'BR',
        246 => 'IO',
        673 => 'BN',
        359 => 'BG',
        226 => 'BF',
        257 => 'BI',
        855 => 'KH',
        237 => 'CM',
        1 => 'CA',
        238 => 'CV',
        1345 => 'KY',
        236 => 'CF',
        235 => 'TD',
        56 => 'CL',
        86 => 'CN',
        61 => 'CX',
        672 => 'CC',
        57 => 'CO',
        269 => 'KM',
        242 => 'CG',
        242 => 'CD',
        682 => 'CK',
        506 => 'CR',
        225 => 'CI',
        385 => 'HR',
        53 => 'CU',
        599 => 'CW',
        357 => 'CY',
        420 => 'CZ',
        45 => 'DK',
        253 => 'DJ',
        1767 => 'DM',
        1809 => 'DO',
        593 => 'EC',
        20 => 'EG',
        503 => 'SV',
        240 => 'GQ',
        291 => 'ER',
        372 => 'EE',
        251 => 'ET',
        500 => 'FK',
        298 => 'FO',
        679 => 'FJ',
        358 => 'FI',
        33 => 'FR',
        594 => 'GF',
        689 => 'PF',
        262 => 'TF',
        241 => 'GA',
        220 => 'GM',
        995 => 'GE',
        49 => 'DE',
        233 => 'GH',
        350 => 'GI',
        30 => 'GR',
        299 => 'GL',
        1473 => 'GD',
        590 => 'GP',
        1671 => 'GU',
        502 => 'GT',
        44 => 'GG',
        224 => 'GN',
        245 => 'GW',
        592 => 'GY',
        509 => 'HT',
        0 => 'HM',
        39 => 'VA',
        504 => 'HN',
        852 => 'HK',
        36 => 'HU',
        354 => 'IS',
        91 => 'IN',
        62 => 'ID',
        98 => 'IR',
        964 => 'IQ',
        353 => 'IE',
        44 => 'IM',
        972 => 'IL',
        39 => 'IT',
        1876 => 'JM',
        81 => 'JP',
        44 => 'JE',
        962 => 'JO',
        7 => 'KZ',
        254 => 'KE',
        686 => 'KI',
        850 => 'KP',
        82 => 'KR',
        381 => 'XK',
        965 => 'KW',
        996 => 'KG',
        856 => 'LA',
        371 => 'LV',
        961 => 'LB',
        266 => 'LS',
        231 => 'LR',
        218 => 'LY',
        423 => 'LI',
        370 => 'LT',
        352 => 'LU',
        853 => 'MO',
        389 => 'MK',
        261 => 'MG',
        265 => 'MW',
        60 => 'MY',
        960 => 'MV',
        223 => 'ML',
        356 => 'MT',
        692 => 'MH',
        596 => 'MQ',
        222 => 'MR',
        230 => 'MU',
        262 => 'YT',
        52 => 'MX',
        691 => 'FM',
        373 => 'MD',
        377 => 'MC',
        976 => 'MN',
        382 => 'ME',
        1664 => 'MS',
        212 => 'MA',
        258 => 'MZ',
        95 => 'MM',
        264 => 'NA',
        674 => 'NR',
        977 => 'NP',
        31 => 'NL',
        599 => 'AN',
        687 => 'NC',
        64 => 'NZ',
        505 => 'NI',
        227 => 'NE',
        234 => 'NG',
        683 => 'NU',
        672 => 'NF',
        1670 => 'MP',
        47 => 'NO',
        968 => 'OM',
        92 => 'PK',
        680 => 'PW',
        970 => 'PS',
        507 => 'PA',
        675 => 'PG',
        595 => 'PY',
        51 => 'PE',
        63 => 'PH',
        64 => 'PN',
        48 => 'PL',
        351 => 'PT',
        1787 => 'PR',
        974 => 'QA',
        262 => 'RE',
        40 => 'RO',
        70 => 'RU',
        250 => 'RW',
        590 => 'BL',
        290 => 'SH',
        1869 => 'KN',
        1758 => 'LC',
        590 => 'MF',
        508 => 'PM',
        1784 => 'VC',
        684 => 'WS',
        378 => 'SM',
        239 => 'ST',
        966 => 'SA',
        221 => 'SN',
        381 => 'RS',
        381 => 'CS',
        248 => 'SC',
        232 => 'SL',
        65 => 'SG',
        1 => 'SX',
        421 => 'SK',
        386 => 'SI',
        677 => 'SB',
        252 => 'SO',
        27 => 'ZA',
        500 => 'GS',
        211 => 'SS',
        34 => 'ES',
        94 => 'LK',
        249 => 'SD',
        597 => 'SR',
        47 => 'SJ',
        268 => 'SZ',
        46 => 'SE',
        41 => 'CH',
        963 => 'SY',
        886 => 'TW',
        992 => 'TJ',
        255 => 'TZ',
        66 => 'TH',
        670 => 'TL',
        228 => 'TG',
        690 => 'TK',
        676 => 'TO',
        1868 => 'TT',
        216 => 'TN',
        90 => 'TR',
        7370 => 'TM',
        1649 => 'TC',
        688 => 'TV',
        256 => 'UG',
        380 => 'UA',
        971 => 'AE',
        44 => 'GB',
        1 => 'US',
        1 => 'UM',
        598 => 'UY',
        998 => 'UZ',
        678 => 'VU',
        58 => 'VE',
        84 => 'VN',
        1284 => 'VG',
        1340 => 'VI',
        681 => 'WF',
        212 => 'EH',
        967 => 'YE',
        260 => 'ZM',
        263 => 'ZW',
    ];

    public function __construct(SendPhoneVerification $sendPhoneVerification, SendWelcomeEmail $sendWelcomeEmail)
    {
        $this->sendPhoneVerification = $sendPhoneVerification;
        $this->sendWelcomeEmail = $sendWelcomeEmail;
    }

    /**
     * Register a New User in storage.
     *
     * @param  \App\DTO\RegisterationData  $data
     * @return \App\Models\User
     */
    public function register(Request $request)
    {
        // Create A User
        $user = User::create([
            'first_name' => $request->first_name,
            'last_name' => $request->last_name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
            'phone' => $request->phone,
            'country_code' => $request->country_code,
        ]);

        //$this->verifyPhone($user);
        return $user;
    }

    /**
     * Verify a user from phone
     *
     * @return void
     */
    public function phone_verification(Request $request)
    {
        $user = User::where('phone', $request->number)->where('country_code', $request->country_code)->get()->first();

        // Get the timestamp that is 10 minutes ago
        $verifier = DB::table('user_verifications')->where('user_id', $user->id)->where('verification_code', $request->verification_code)
        ->where('expiry', '>', now())
        ->latest()->first();

        if ($verifier) {
            User::findOrFail($user->id)->update(['verified_at' => now()]);
            DB::table('user_verifications')->where('id', $verifier->id)->delete();

            ($this->sendWelcomeEmail)($user);

            return true;
        }

        abort(404, 'The Entered code is invalid or expired');
    }

    /**
     * Verify a user from email
     *
     * @return void
     */
    public function email_verification(Request $request)
    {
        $user = User::where('email', $request->email)->get()->first();

        // Get the timestamp that is 10 minutes ago
        $verifier = DB::table('user_verifications')->where('user_id', $user->id)->where('verification_code', $request->verification_code)
        ->where('expiry', '>', now())
        ->latest()->first();

        if ($verifier) {
            User::findOrFail($user->id)->update(['verified_at' => now()]);
            DB::table('user_verifications')->where('id', $verifier->id)->delete();

            ($this->sendWelcomeEmail)($user);

            return true;
        }
        abort(404, 'The Entered code is invalid or expired');
    }

    /**
     * Send a Verification Message to the User
     */
    public function verifyPhone(User $user): void
    {
        //Generate Validation Token
        $verification_code = rand(1000, 9999);
        $expiry_time = now()->addMinutes(10);
        DB::table('user_verifications')->where('user_id', $user->id)->delete();
        DB::table('user_verifications')->insert(['user_id' => $user->id, 'type' => 1, 'verification_code' => $verification_code, 'created_at' => now(), 'expiry' => $expiry_time]);

        ($this->sendPhoneVerification)($user, $verification_code);
    }

    /**
     * Send a Verification Email to the User
     */
    public function verifyEmail(User $user): void
    {
        // Generate Email Token
        $verification_code = rand(1000, 9999);
        $expiry_time = now()->addMinutes(10);
        DB::table('user_verifications')->where('user_id', $user->id)->delete();
        DB::table('user_verifications')->insert(['user_id' => $user->id, 'type' => 2, 'verification_code' => $verification_code, 'created_at' => now(), 'expiry' => now()->addMinutes(10)]);
        Mail::to($user->email)->queue(new EmailVerification($user, $verification_code));
    }
}
